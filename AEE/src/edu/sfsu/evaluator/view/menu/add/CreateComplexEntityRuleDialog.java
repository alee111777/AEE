/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.sfsu.evaluator.view.menu.add;

import edu.sfsu.evaluator.EvaluatorController;
import edu.sfsu.evaluator.EvaluatorViewModel;
import edu.sfsu.evaluator.model.ComplexEntityRule;
import edu.sfsu.evaluator.model.ComplexEntityRuleNode;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author eric
 */
public class CreateComplexEntityRuleDialog extends javax.swing.JDialog
{

    private EvaluatorViewModel viewModel;
    private EvaluatorController controller;
    private ArrayList<ComplexEntityRuleNode> ruleNodes;
    private static final String AND = "AND";
    private static final String OR = "OR";
    private Color color;
    private static final ArrayList<Character> WHITELIST;

    static
    {
        WHITELIST = new ArrayList();
        char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
                toCharArray();
        for (int i = 0;
                i < alpha.length;
                i++)
        {
            WHITELIST.add(alpha[i]);
        }
    }

    /**
     * Creates new form ComplexEntityRuleAddDialog
     */
    public CreateComplexEntityRuleDialog(
            EvaluatorViewModel viewModel,
            EvaluatorController controller)
    {
        super(controller.getEvaluatorFrame(), true);
        this.viewModel = viewModel;
        this.controller = controller;
        ruleNodes = new ArrayList();
        initComponents();
        myInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jButton1 = new javax.swing.JButton();
        jColorChooser1 = new javax.swing.JColorChooser();
        createButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        complexEntityRuleTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        annotationComboBox = new javax.swing.JComboBox();
        nameTextField = new javax.swing.JTextField();
        nameInfoLabel = new javax.swing.JLabel();
        andOrComboBox = new javax.swing.JComboBox();
        helpButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create Complex Entity Rule");

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                createButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });

        complexEntityRuleTextField.setEditable(false);
        jScrollPane1.setViewportView(complexEntityRuleTextField);

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteButtonActionPerformed(evt);
            }
        });

        nameInfoLabel.setText("Complex Entity Rule Name: ");

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                helpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(nameInfoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(helpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(annotationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(andOrComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(nameTextField))))
                .addGap(190, 190, 190))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(nameInfoLabel)
                .addGap(26, 26, 26)
                .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(annotationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(andOrComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(deleteButton)))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(cancelButton)
                    .addComponent(helpButton))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static boolean validateInput(String input)
    {
        for (int i = 0;
                i < input.length();
                i++)
        {
            if (WHITELIST.contains((Character) input.charAt(i)))
            {
                return true;
            }
        }
        return false;
    }

    /**
     * Add Complex Entity Rule Node
     * <p/>
     * @param evt
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addButtonActionPerformed
    {//GEN-HEADEREND:event_addButtonActionPerformed
        /* Add entity rule node to rule nodes */
        String andOr = (String) andOrComboBox.getSelectedItem();
        boolean optional = (andOr.compareTo(OR) == 0);
        String annotationType = (String) annotationComboBox.getSelectedItem();
        if (annotationType == null)
        {
            return;
        } else if (annotationType.compareTo("") == 0)
        {
            return;
        }
        ComplexEntityRuleNode ruleNode =
                new ComplexEntityRuleNode(annotationType, optional);
        ruleNodes.add(ruleNode);
        populateComplexEntityRuleTextField();

        Random rand = new Random();
        float r = rand.nextFloat();
        float g = rand.nextFloat();
        float b = rand.nextFloat();
        color = new Color(r, g, b);
    }//GEN-LAST:event_addButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Attempt to create a new Complex Entity Rule.
     * <p/>
     * @param evt
     */
    private void createButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_createButtonActionPerformed
    {//GEN-HEADEREND:event_createButtonActionPerformed
        String name = nameTextField.getText();
        if (ruleNodes.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No rules specified",
                                          "Rule Error",
                                          JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (ruleNodes.size() < 2)
        {
            JOptionPane.showMessageDialog(this,
                                          "Complex entity must be contain more than one entity",
                                          "Rule Error",
                                          JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!validateInput(name))
        {
            JOptionPane.showMessageDialog(this, "Invalid name",
                                          "Naming Error",
                                          JOptionPane.ERROR_MESSAGE);
            return;
        }
        ArrayList<ComplexEntityRule> complexEntityRules =
                viewModel.getComplexEntityRules();
        for (int i = 0;
                i < complexEntityRules.size();
                i++)
        {
            ComplexEntityRule entityRule = complexEntityRules.get(i);
            if (entityRule.getEntityRuleName().compareTo(name) == 0)
            {
                String message =
                        String.format(
                        "Already a complex entity rule named %s", name);
                JOptionPane.showMessageDialog(this, message,
                                              "Naming Error",
                                              JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        ComplexEntityRule entityRule = new ComplexEntityRule(name, ruleNodes,
                                                             color);
        controller.requestComplexEntityRuleAdd(entityRule);
        viewModel.repaintView();
        this.dispose();
    }//GEN-LAST:event_createButtonActionPerformed

    /**
     * Delete the latest rule node.
     * <p/>
     * @param evt
     */
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteButtonActionPerformed
    {//GEN-HEADEREND:event_deleteButtonActionPerformed
        if (ruleNodes.isEmpty())
        {
            return;
        }
        ruleNodes.remove(ruleNodes.size() - 1);
        populateComplexEntityRuleTextField();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_helpButtonActionPerformed
    {//GEN-HEADEREND:event_helpButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_helpButtonActionPerformed

    /**
     * User created initComponents().
     */
    private void myInitComponents()
    {
        ArrayList<String> annotationTypes =
                new ArrayList(viewModel.getLabels().keySet());
        Collections.sort(annotationTypes);
        for (String annotationType
                : annotationTypes)
        {
            annotationComboBox.addItem(annotationType);
        }

        andOrComboBox.addItem(AND);
        andOrComboBox.addItem(OR);

    }

    /**
     * Populate text field.
     */
    private void populateComplexEntityRuleTextField()
    {
        String ruleString = "";
        for (ComplexEntityRuleNode ruleNode
                : ruleNodes)
        {
            if (ruleNode.isOptional())
            {
                ruleString += String.format("[%s]",
                                            ruleNode.getAnnotationType());
            } else
            {
                ruleString += String.format("{%s}",
                                            ruleNode.getAnnotationType());
            }
        }
        complexEntityRuleTextField.setText(ruleString);

    }

    /**
     * Show this dialog.
     * <p/>
     * @param viewModel
     * @param controller
     */
    public static void showCreateComplexEntityRuleDialog(
            EvaluatorViewModel viewModel,
            EvaluatorController controller)
    {
        CreateComplexEntityRuleDialog ruleDialog =
                new CreateComplexEntityRuleDialog(viewModel, controller);
        ruleDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        ruleDialog.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox andOrComboBox;
    private javax.swing.JComboBox annotationComboBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField complexEntityRuleTextField;
    private javax.swing.JButton createButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameInfoLabel;
    private javax.swing.JTextField nameTextField;
    // End of variables declaration//GEN-END:variables
}
